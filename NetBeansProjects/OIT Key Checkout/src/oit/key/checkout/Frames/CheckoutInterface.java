/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package oit.key.checkout.Frames;
import oit.key.checkout.shared;
import oit.key.checkout.Objects.barcodeObject;
import clocking.clock;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import clocking.ClockListener;
/**
 *
 * @author phillip.oegema
 */
public class CheckoutInterface extends javax.swing.JFrame {

    static shared shared;
    clock clock = new clock();

    /**
     * Creates new form CheckoutInterface
     */
    public CheckoutInterface() {
        initComponents();
        jTextFieldBarcodeInput.requestFocusInWindow();

    }

    public void update(){
        javax.swing.Timer t = new javax.swing.Timer(1000, new ClockListener());
                t.start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonEnter = new javax.swing.JButton();
        jTextFieldBarcodeInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaTechsOnDuty = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaKeys = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonEnter.setText("Enter");
        jButtonEnter.setFocusCycleRoot(true);
        jButtonEnter.setFocusTraversalPolicyProvider(true);
        jButtonEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnterActionPerformed(evt);
            }
        });

        jTextFieldBarcodeInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldBarcodeInput.setFocusCycleRoot(true);
        jTextFieldBarcodeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Tab(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Techs Currently On Duty");

        jTextAreaTechsOnDuty.setColumns(20);
        jTextAreaTechsOnDuty.setEditable(false);
        jTextAreaTechsOnDuty.setRows(5);
        jScrollPane1.setViewportView(jTextAreaTechsOnDuty);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Keys Currently Checked Out");

        jTextAreaKeys.setColumns(20);
        jTextAreaKeys.setRows(5);
        jScrollPane2.setViewportView(jTextAreaKeys);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(69, 69, 69)
                        .addComponent(jTextFieldBarcodeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEnter)))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldBarcodeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEnter)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnterActionPerformed
        boolean more = false;
        String scanned = jTextFieldBarcodeInput.getText();
        jTextFieldBarcodeInput.setText("");
        jTextFieldBarcodeInput.requestFocusInWindow();
        
        more = clock.clockObject(scanned, shared);
        
        if(more){
            if(shared.isKeyCheckedOut(scanned)){
                clock.checkinKey(scanned);
            }
            else{
                String user = JOptionPane.showInputDialog(null, "Please scan a user to check this out to.");
                clock.checkoutKey(scanned, user);
            }
        }
        
        jTextAreaTechsOnDuty.setText(shared.getNamesOnDuty());
        jTextAreaKeys.setText(shared.getKeysCheckedOut());
    }//GEN-LAST:event_jButtonEnterActionPerformed

    private void Tab(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tab
       
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
            jButtonEnterActionPerformed(null);
    }//GEN-LAST:event_Tab

    /**
     * @param args the command line arguments
     */
    public static void main(shared s) {
        
        shared = s;

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CheckoutInterface().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEnter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaKeys;
    private javax.swing.JTextArea jTextAreaTechsOnDuty;
    private javax.swing.JTextField jTextFieldBarcodeInput;
    // End of variables declaration//GEN-END:variables
}
